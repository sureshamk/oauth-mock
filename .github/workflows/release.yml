name: Release Docker Image

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Build and push multi-platform Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update release notes
        run: |
          echo "## Docker Images" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "The following Docker images have been published:" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Multi-platform support:" >> $GITHUB_OUTPUT
          echo "- linux/amd64" >> $GITHUB_OUTPUT
          echo "- linux/arm64" >> $GITHUB_OUTPUT
          echo "- linux/arm/v7" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Pull commands:" >> $GITHUB_OUTPUT
          echo "```bash" >> $GITHUB_OUTPUT
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          echo "```" >> $GITHUB_OUTPUT
